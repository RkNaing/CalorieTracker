[versions]

# Android Plugin
androidGradlePlugin = "8.1.1"

# Kotlin Libraries
kotlin = "1.9.10"
coroutines = "1.7.3"
ktor-client = "2.3.4" # https://ktor.io/docs/getting-started-ktor-client.html#add-dependencies
kotlin-serialization = "1.9.0" # https://plugins.gradle.org/plugin/org.jetbrains.kotlin.plugin.serialization

# Compose Libraries
compose-compiler = "1.5.3" # https://developer.android.com/jetpack/androidx/releases/compose-kotlin
compose-bom = "2023.09.02" # https://developer.android.com/jetpack/compose/bom
navigation-compose = "2.7.3" # https://developer.android.com/jetpack/compose/navigation#setup
accompanist = "0.31.2-alpha"

hilt = "2.48" # https://tinyurl.com/hilt-android , https://tinyurl.com/hilt-testing-guide

# Testing
mockk = "1.13.8"
agp = "8.1.1"
org-jetbrains-kotlin-android = "1.9.0"
material = "1.9.0"

[libraries]

# Compose Core
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }

# Compose Material
compose-material = { module = "androidx.compose.material3:material3" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
compose-material-window-size = { module = "androidx.compose.material3:material3-window-size-class" }

# Compose Test
compose-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
compose-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }

# Compose Lifecycle
activity-compose = { module = "androidx.activity:activity-compose", version = "1.7.2" }
viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version = "2.6.2" }
lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version = "2.6.2" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version = "2.6.2" }

# Compose Navigation
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
navigation-compose-test = { module = "androidx.navigation:navigation-testing", version.ref = "navigation-compose" }

# Compose Accompanist
accompanist-material-placeholder = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }

# Compose Utilities
coil-compose = { module = "io.coil-kt:coil-compose", version = "2.3.0" }

# AndroidX
appcompat = { module = "androidx.appcompat:appcompat", version = "1.6.1" }
core-ktx = { module = "androidx.core:core-ktx", version = "1.12.0" }
core-splashscreen = { module = "androidx.core:core-splashscreen", version = "1.0.1" }
core-desugar = { module = "com.android.tools:desugar_jdk_libs", version = "2.0.3"}
datastore-preference = { module = "androidx.datastore:datastore-preferences", version = "1.0.0" } # https://tinyurl.com/preference-datastore

# Dependency Injection (Hilt)
hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
hilt-gradle-plugin = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }
hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version = "1.0.0" } # https://developer.android.com/jetpack/compose/libraries#hilt-navigation

# KotlinX
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.3.5" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.4.1" }

# Ktor Client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-client" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor-client" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor-client" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor-client" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-client" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-client" }

# KotlinX Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.6.0" }
kotlinx-serialization-plugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }

# Timber Logging - https://github.com/JakeWharton/timber
timber = { module = "com.jakewharton.timber:timber", version = "5.0.1" }

# Testing
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk-agent = { module = "io.mockk:mockk-agent", version.ref = "mockk" }
junit = { module = "junit:junit", version = "4.13.2" }
junit-android = { module = "androidx.test.ext:junit", version = "1.1.5" }
truth = { module = "com.google.truth:truth", version = "1.1.5" }
truth-android = { module = "androidx.test.ext:truth", version = "1.5.0" }
turbine = { module = "app.cash.turbine:turbine", version = "1.0.0" }
expresso-android = { module = "androidx.test.espresso:espresso-core", version = "3.5.1" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version = "4.11.0" }

# Static Code analysic
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version = "1.23.1" }
detekt-twitter-compose = { module = "com.twitter.compose.rules:detekt", version = "0.0.26" }

# Gradle Plugins
gradle-plugin-android = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
gradle-plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-plugin-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version = "1.9.10-1.0.13" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

[plugins]
#android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
#android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
#kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
#hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
detekt = { id = "io.gitlab.arturbosch.detekt", version = "1.23.0" }
com-android-library = { id = "com.android.library", version.ref = "agp" }
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "org-jetbrains-kotlin-android" }
#ksp = { id = "com.google.devtools.ksp", version = "1.9.10-1.0.13" }
#kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-serialization" }

[bundles]
ktor-client = [
    "ktor-client-core",
    "ktor-client-okhttp",
    "ktor-client-serialization",
    "ktor-client-logging",
    "ktor-client-content-negotiation",
    "ktor-serialization-kotlinx-json",
]